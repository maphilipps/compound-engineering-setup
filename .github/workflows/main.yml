name: Main

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  ai-rule-validation:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: read
      id-token: write
      actions: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: AI-Based Rule Validation
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          prompt: |
            @claude Please perform comprehensive AI-based rule validation for this repository, focusing on our 4 core criteria:

            ✅ **Correctness**: Are the changes logically sound and error-free?
            ✅ **Completeness**: Do the changes fully address all requirements?
            ✅ **Size**: Is the solution appropriately sized (not over/under-engineered)?
            ✅ **Trajectory**: Do the changes advance our compound learning goals?

            ## AI Rule Validation Tasks

            1. **Analyze All Changes** in this PR/push:
               - Review code modifications for logical correctness
               - Check that new features are completely implemented
               - Validate that changes follow established patterns
               - Assess if changes build on previous learnings

            2. **Apply AI Development Standards** from CLAUDE.md:
               - Verify adherence to established coding patterns
               - Check error handling completeness
               - Validate variable naming and code structure
               - Ensure proper integration with existing architecture

            3. **Validate Configuration Changes**:
               - Check Claude Code agents and commands for correctness
               - Verify ADR structure and content quality
               - Validate workflow configurations and logic
               - Ensure learning capture systems are properly configured

            4. **4-Criteria Assessment**:
               - **Correctness**: Flag any logical errors, syntax issues, or broken patterns
               - **Completeness**: Identify missing implementations, incomplete features
               - **Size**: Call out over-engineering or insufficient implementation
               - **Trajectory**: Assess how changes contribute to compound learning

            ## Validation Categories

            ### Code Quality
            - Naming conventions and clarity
            - Error handling patterns
            - Code organization and structure
            - Documentation completeness

            ### Architecture Compliance
            - Adherence to established patterns
            - Proper separation of concerns
            - Integration with existing systems
            - Future maintainability

            ### Learning Integration
            - Use of established learning patterns
            - Contribution to knowledge capture
            - Alignment with ADR decisions
            - Enhancement of development workflows

            ## Output Requirements

            - Provide specific, actionable feedback
            - Reference exact file locations and line numbers
            - Explain the "why" behind each recommendation
            - Suggest concrete improvements where needed

            Use `gh pr comment` to post your detailed validation results as a comment on the PR, or provide a summary for push events.

          claude_args: '--allowed-tools "Read,Glob,Grep,LS,Bash(gh:*),Bash(git:*)"'

  ai-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: read
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: AI-Based Testing Analysis
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          prompt: |
            @claude Please perform AI-based testing analysis for this repository:

            ## Testing Analysis Tasks

            1. **Analyze Test Coverage**:
               - Review existing tests for completeness
               - Identify missing test scenarios
               - Check edge cases and error conditions
               - Validate test quality and maintainability

            2. **Configuration Testing**:
               - Verify Claude Code configurations are valid
               - Test workflow logic and triggers
               - Validate agent and command structures
               - Check ADR template and format compliance

            3. **Integration Testing**:
               - Verify workflows integrate properly
               - Check cross-component dependencies
               - Validate learning capture mechanisms
               - Test auto-fix and review processes

            4. **Quality Assessment**:
               - Evaluate test maintainability
               - Check for test anti-patterns
               - Assess coverage gaps
               - Recommend testing improvements

            Focus on practical, actionable testing recommendations that improve reliability and maintainability.

            Use `gh pr comment` to post testing analysis results, or provide a summary for push events.

          claude_args: '--allowed-tools "Read,Glob,Grep,LS,Bash(gh:*),Bash(git:*)"'