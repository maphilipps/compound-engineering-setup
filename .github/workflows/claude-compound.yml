name: Compound Intelligence Synthesis
on:
  schedule:
    - cron: '0 6 * * *'  # Daily at 6 AM UTC
  workflow_dispatch:  # Allow manual triggering
  
jobs:
  synthesize-learning:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
      issues: read
      id-token: write
      actions: read
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Daily Learning Synthesis
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          prompt: |
            @claude Please perform daily compound intelligence synthesis, focusing on our 4 core optimization criteria:

            âœ… **Correctness**: How has our logical soundness and bug prevention improved?
            âœ… **Completeness**: Are we achieving fuller requirement coverage?
            âœ… **Size**: Is our solution complexity becoming more appropriate?
            âœ… **Trajectory**: How effectively are we advancing compound learning goals?

            # Daily Context Window Optimization Synthesis
            
            ## 4-Criteria Synthesis Objectives
            1. **Consolidate** patterns through correctness/completeness lens
            2. **Refine** prevention rules for optimal size and trajectory impact
            3. **Calculate** metrics showing 4-criteria progress
            4. **Identify** patterns that optimize multiple criteria simultaneously
            5. **Update** CLAUDE.md with 4-criteria intelligence
            
            ## Analysis Tasks
            
            ### 1. Pattern Consolidation
            Review all files in `.claude/learning/errors/` and `.claude/learning/patterns/`:
            - **Identify** similar patterns across different PRs
            - **Merge** redundant entries where appropriate
            - **Cross-reference** related patterns for better learning
            - **Flag** patterns that appear frequently (3+ occurrences)
            
            ### 2. Prevention Rule Optimization
            Analyze prevention rules in `.claude/learning/prevention-rules/README.md`:
            - **Validate** rule effectiveness against historical data
            - **Refine** rules that are too broad or too narrow
            - **Merge** similar rules into more comprehensive ones
            - **Deprecate** rules with low effectiveness (<70%)
            
            ### 3. Metrics Calculation
            Update `.claude/learning/metrics/velocity.json`:
            ```json
            {
              "learning_velocity": {
                "last_updated": "[current ISO date]",
                "patterns_extracted_this_week": "[count]",
                "rules_generated_this_month": "[count]", 
                "knowledge_base_growth_rate": "[percentage]",
                "cross_pattern_correlations": "[count]"
              }
            }
            ```
            
            Update `.claude/learning/metrics/effectiveness.json`:
            ```json
            {
              "prevention_effectiveness": {
                "last_updated": "[current ISO date]",
                "overall_prevention_rate": "[percentage]",
                "false_positive_rate": "[percentage]",
                "time_to_detection_improvement": "[percentage]"
              }
            }
            ```
            
            ### 4. Emerging Pattern Detection
            Identify new trends in the learning data:
            - **New categories** of issues appearing
            - **Shift in problem types** (security â†’ performance, etc.)
            - **Agent effectiveness** patterns
            - **Seasonal patterns** in development issues
            
            ### 5. CLAUDE.md Intelligence Update
            Enhance the main CLAUDE.md with compound intelligence:
            ```markdown
            ## Compound Engineering Status
            *Last synthesis: [date]*
            
            ### Learning Velocity
            - Patterns extracted this week: [count]
            - Active prevention rules: [count] 
            - Knowledge base growth: [percentage]
            
            ### Top Patterns This Week
            1. [Most frequent error pattern]
            2. [Most effective success pattern]
            3. [Highest impact prevention rule]
            
            ### Agent Performance Insights
            - Most effective agent combination: [agents]
            - Fastest growing expertise area: [domain]
            - Coordination patterns that work: [patterns]
            
            ### Prevention Rule Effectiveness
            - Rules with >90% effectiveness: [count]
            - Rules requiring refinement: [count] 
            - New rules added this week: [count]
            ```
            
            ## Quality Standards
            - Only synthesize patterns with statistical significance (3+ occurrences)
            - Maintain prevention rule conciseness (<200 chars)
            - Ensure cross-references between related patterns
            - Update metrics based on actual performance data
            
            ## Output Files to Update
            1. `.claude/learning/prevention-rules/README.md` - Refined rules
            2. `.claude/learning/metrics/velocity.json` - Current velocity metrics
            3. `.claude/learning/metrics/effectiveness.json` - Prevention effectiveness
            4. `CLAUDE.md` - Compound intelligence summary
            5. `.claude/learning/synthesis-[date].md` - Daily synthesis report
            
            Begin daily synthesis now.
            
            Use git commands with the Bash tool to commit and push all your changes automatically.
          
          claude_args: '--allowed-tools "Bash(git:*),Write,Edit,Read,Glob,Grep,MultiEdit,Bash(gh issue:*)" --files .claude/learning/**/*.{md,json}'
          
      - name: Generate Synthesis Report
        uses: anthropics/claude-code-action@v1  
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          prompt: |
            # Generate Daily Synthesis Report
            
            Create a comprehensive daily synthesis report summarizing today's compound engineering intelligence updates.
            
            ## Report Structure
            ```markdown
            # Daily Synthesis Report - [Date]
            
            ## Learning Velocity Metrics
            - New patterns extracted: [count]
            - Prevention rules updated: [count]
            - Knowledge base growth: [percentage]
            
            ## Key Insights
            ### Most Significant Pattern
            [Description of the most impactful pattern discovered]
            
            ### Prevention Rule Updates
            - Rules added: [list]
            - Rules refined: [list] 
            - Rules deprecated: [list]
            
            ### Agent Performance
            - Top performing agent combination: [agents]
            - Domain showing most growth: [domain]
            - Coordination improvements identified: [patterns]
            
            ## Recommendations
            1. [Action item based on synthesis]
            2. [Learning opportunity identified]
            3. [Prevention strategy to implement]
            
            ## Tomorrow's Focus
            Based on today's patterns, recommend focus areas for development team.
            ```
            
            Save this report as `.claude/learning/synthesis-$(date +%Y-%m-%d).md`
            
            Use git commands with the Bash tool to commit and push your changes automatically.
            
          claude_args: '--allowed-tools "Bash(git:*),Write,Read,Bash(date:*)"'
      
      - name: Create Weekly Summary Issue
        if: github.event.schedule == '0 6 * * 1'  # Only on Mondays
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          prompt: |
            # Create Weekly Learning Summary Issue
            
            Analyze the past week's learning synthesis reports and create a comprehensive weekly summary as a GitHub issue.
            
            ## Analysis Scope
            Read all `.claude/learning/synthesis-*.md` files from the past 7 days.
            
            ## Issue Content
            Create a GitHub issue with title: "Weekly Compound Engineering Summary - Week of [date]"
            
            Content should include:
            ```markdown
            # ðŸ“ˆ Weekly Compound Engineering Summary
            
            ## Learning Metrics
            - Total patterns extracted: [count]
            - Prevention rules added: [count] 
            - Knowledge base growth: [percentage]
            - Team velocity improvement: [percentage]
            
            ## Top Insights This Week
            1. [Most significant pattern]
            2. [Most effective prevention rule]
            3. [Best performing agent combination]
            
            ## Prevention Success Stories
            - Issues prevented: [count]
            - Time saved through early detection: [hours]
            - Quality improvements measured: [metrics]
            
            ## Next Week's Recommendations
            Based on this week's patterns:
            1. [Specific action for team]
            2. [Learning opportunity to explore]
            3. [Prevention strategy to implement]
            
            ## Compound Effect Progress
            - Month-over-month velocity: [percentage]
            - Error recurrence rate: [percentage]
            - Learning system maturity: [assessment]
            
            ---
            *Auto-generated by compound engineering system*
            ```
            
            Create this issue using the GitHub CLI: `gh issue create`
            
          claude_args: '--allowed-tools "Read,Glob,Bash(gh issue:*)"'